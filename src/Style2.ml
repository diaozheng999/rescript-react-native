(** This file is partially generated by genStyles.ts *)

include Style2_basis

(* types *)

type flexStyle =
  [ `alignContent
  | `alignItems
  | `alignSelf
  | `aspectRatio
  | `borderBottomWidth
  | `borderEndWidth
  | `borderLeftWidth
  | `borderRightWidth
  | `borderStartWidth
  | `borderTopWidth
  | `borderWidth
  | `bottom
  | `display
  | `_end (* Renamed to be compatible with rescript-react-native *)
  | `flex
  | `flexBasis
  | `flexDirection
  | `flexGrow
  | `flexShrink
  | `flexWrap
  | `height
  | `justifyContent
  | `left
  | `margin
  | `marginBottom
  | `marginEnd
  | `marginHorizontal
  | `marginLeft
  | `marginRight
  | `marginStart
  | `marginTop
  | `marginVertical
  | `maxHeight
  | `maxWidth
  | `minHeight
  | `minWidth
  | `overflow
  | `padding
  | `paddingBottom
  | `paddingEnd
  | `paddingHorizontal
  | `paddingLeft
  | `paddingRight
  | `paddingStart
  | `paddingTop
  | `paddingVertical
  | `position
  | `right
  | `start
  | `top
  | `width
  | `zIndex
  | `direction ]

type transformsStyle =
  [ `transform
  | `transformMatrix
  | `rotation
  | `scaleX
  | `scaleY
  | `translateX
  | `translateY ]

type shadowStyleIOS =
  [ `shadowColor | `shadowOffset | `shadowOpacity | `shadowRadius ]

type viewStyle =
  [ flexStyle
  | shadowStyleIOS
  | transformsStyle
  | `backfaceVisibility
  | `backgroundColor
  | `borderBottomColor
  | `borderBottomEndRadius
  | `borderBottomLeftRadius
  | `borderBottomRightRadius
  | `borderBottomStartRadius
  | `borderBottomWidth
  | `borderColor
  | `borderEndColor
  | `borderLeftColor
  | `borderLeftWidth
  | `borderRadius
  | `borderRightColor
  | `borderRightWidth
  | `borderStartColor
  | `borderStyle
  | `borderTopColor
  | `borderTopEndRadius
  | `borderTopLeftRadius
  | `borderTopRightRadius
  | `borderTopStartRadius
  | `borderTopWidth
  | `borderWidth
  | `opacity
  | `testID
  | `elevation ]

type textStyleIOS =
  [ viewStyle
  | `fontVariant
  | `letterSpacing
  | `textDecorationColor
  | `textDecorationStyle
  | `writingDirection ]

type textStyleAndroid = [ viewStyle | `textAlignVertical | `includeFontPadding ]

type textStyle =
  [ textStyleIOS
  | textStyleAndroid
  | viewStyle
  | `color
  | `fontFamily
  | `fontSize
  | `fontStyle
  | `fontWeight
  | `letterSpacing
  | `lineHeight
  | `textAlign
  | `textDecorationLine
  | `textDecorationStyle
  | `textDecorationColor
  | `textShadowColor
  | `textShadowOffset
  | `textShadowRadius
  | `textTransform
  | `testID ]

type imageStyle =
  [ flexStyle
  | shadowStyleIOS
  | transformsStyle
  | `resizeMode
  | `backfaceVisibility
  | `borderBottomLeftRadius
  | `borderBottomRightRadius
  | `backgroundColor
  | `borderColor
  | `borderWidth
  | `borderRadius
  | `borderTopLeftRadius
  | `borderTopRightRadius
  | `overflow
  | `overlayColor
  | `tintColor
  | `opacity ]

(* externals *)
external flexStyle : [< flexStyle ] style -> ReactNative.Style.t
  = "%identity"

external transformsStyle :
  [< transformsStyle ] style -> ReactNative.Style.t = "%identity"

external shadowStyleIOS :
  [< shadowStyleIOS ] style -> ReactNative.Style.t = "%identity"

external viewStyle : [< viewStyle ] style -> ReactNative.Style.t
  = "%identity"

external textStyleIOS :
  [< textStyleIOS ] style -> ReactNative.Style.t = "%identity"

external textStyleAndroid :
  [< textStyleAndroid ] style -> ReactNative.Style.t = "%identity"

external textStyle : [< textStyle ] style -> ReactNative.Style.t
  = "%identity"

external imageStyle : [< imageStyle ] style -> ReactNative.Style.t
  = "%identity"

(* external declarations *)
external js_alignContent :
  abs_style ->
  ([ `flexStart [@bs.as "flex-start"]
   | `flexEnd [@bs.as "flex-end"]
   | `center
   | `stretch
   | `spaceBetween [@bs.as "space-between"]
   | `spaceAround [@bs.as "space-around"] ]
  [@bs.string]) ->
  [> `alignContent ] t = "alignContent"
  [@@bs.set]

external js_alignItems :
  abs_style ->
  ([ `flexStart [@bs.as "flex-start"]
   | `flexEnd [@bs.as "flex-end"]
   | `center
   | `stretch
   | `baseline ]
  [@bs.string]) ->
  [> `alignItems ] t = "alignItems"
  [@@bs.set]

external js_alignSelf :
  abs_style ->
  ([ `flexStart [@bs.as "flex-start"]
   | `flexEnd [@bs.as "flex-end"]
   | `center
   | `stretch
   | `baseline
   | `auto ]
  [@bs.string]) ->
  [> `alignSelf ] t = "alignSelf"
  [@@bs.set]

external js_aspectRatio : abs_style -> float -> [> `aspectRatio ] t
  = "aspectRatio"
  [@@bs.set]

external js_borderBottomWidth : abs_style -> float -> [> `borderBottomWidth ] t
  = "borderBottomWidth"
  [@@bs.set]

external js_borderEndWidth :
  abs_style -> ReactNative.Style.size -> [> `borderEndWidth ] t
  = "borderEndWidth"
  [@@bs.set]

external js_borderLeftWidth : abs_style -> float -> [> `borderLeftWidth ] t
  = "borderLeftWidth"
  [@@bs.set]

external js_borderRightWidth : abs_style -> float -> [> `borderRightWidth ] t
  = "borderRightWidth"
  [@@bs.set]

external js_borderStartWidth :
  abs_style -> ReactNative.Style.size -> [> `borderStartWidth ] t
  = "borderStartWidth"
  [@@bs.set]

external js_borderTopWidth : abs_style -> float -> [> `borderTopWidth ] t
  = "borderTopWidth"
  [@@bs.set]

external js_borderWidth : abs_style -> float -> [> `borderWidth ] t
  = "borderWidth"
  [@@bs.set]

external js_bottom : abs_style -> ReactNative.Style.size -> [> `bottom ] t
  = "bottom"
  [@@bs.set]

external js_display : abs_style -> ReactNative.Style.display -> [> `display ] t
  = "display"
  [@@bs.set]

external js_end_ : abs_style -> ReactNative.Style.size -> [> `_end ] t = "end"
  [@@bs.set]

external js_flex : abs_style -> float -> [> `flex ] t = "flex" [@@bs.set]

external js_flexBasis : abs_style -> ReactNative.Style.size -> [> `flexBasis ] t
  = "flexBasis"
  [@@bs.set]

external js_flexDirection :
  abs_style ->
  ([ `row
   | `column
   | `rowReverse [@bs.as "row-reverse"]
   | `columnReverse [@bs.as "column-reverse"] ]
  [@bs.string]) ->
  [> `flexDirection ] t = "flexDirection"
  [@@bs.set]

external js_flexGrow : abs_style -> float -> [> `flexGrow ] t = "flexGrow"
  [@@bs.set]

external js_flexShrink : abs_style -> float -> [> `flexShrink ] t = "flexShrink"
  [@@bs.set]

external js_flexWrap :
  abs_style -> ReactNative.Style.flexWrap -> [> `flexWrap ] t = "flexWrap"
  [@@bs.set]

external js_height : abs_style -> ReactNative.Style.size -> [> `height ] t
  = "height"
  [@@bs.set]

external js_justifyContent :
  abs_style ->
  ([ `flexStart [@bs.as "flex-start"]
   | `flexEnd [@bs.as "flex-end"]
   | `center
   | `spaceBetween [@bs.as "space-between"]
   | `spaceAround [@bs.as "space-around"]
   | `spaceEvenly [@bs.as "space-evenly"] ]
  [@bs.string]) ->
  [> `justifyContent ] t = "justifyContent"
  [@@bs.set]

external js_left : abs_style -> ReactNative.Style.size -> [> `left ] t = "left"
  [@@bs.set]

external js_margin : abs_style -> ReactNative.Style.margin -> [> `margin ] t
  = "margin"
  [@@bs.set]

external js_marginBottom :
  abs_style -> ReactNative.Style.margin -> [> `marginBottom ] t = "marginBottom"
  [@@bs.set]

external js_marginEnd :
  abs_style -> ReactNative.Style.margin -> [> `marginEnd ] t = "marginEnd"
  [@@bs.set]

external js_marginHorizontal :
  abs_style -> ReactNative.Style.margin -> [> `marginHorizontal ] t
  = "marginHorizontal"
  [@@bs.set]

external js_marginLeft :
  abs_style -> ReactNative.Style.margin -> [> `marginLeft ] t = "marginLeft"
  [@@bs.set]

external js_marginRight :
  abs_style -> ReactNative.Style.margin -> [> `marginRight ] t = "marginRight"
  [@@bs.set]

external js_marginStart :
  abs_style -> ReactNative.Style.margin -> [> `marginStart ] t = "marginStart"
  [@@bs.set]

external js_marginTop :
  abs_style -> ReactNative.Style.margin -> [> `marginTop ] t = "marginTop"
  [@@bs.set]

external js_marginVertical :
  abs_style -> ReactNative.Style.margin -> [> `marginVertical ] t
  = "marginVertical"
  [@@bs.set]

external js_maxHeight : abs_style -> ReactNative.Style.size -> [> `maxHeight ] t
  = "maxHeight"
  [@@bs.set]

external js_maxWidth : abs_style -> ReactNative.Style.size -> [> `maxWidth ] t
  = "maxWidth"
  [@@bs.set]

external js_minHeight : abs_style -> ReactNative.Style.size -> [> `minHeight ] t
  = "minHeight"
  [@@bs.set]

external js_minWidth : abs_style -> ReactNative.Style.size -> [> `minWidth ] t
  = "minWidth"
  [@@bs.set]

external js_overflow :
  abs_style -> ReactNative.Style.overflow -> [> `overflow ] t = "overflow"
  [@@bs.set]

external js_padding : abs_style -> ReactNative.Style.size -> [> `padding ] t
  = "padding"
  [@@bs.set]

external js_paddingBottom :
  abs_style -> ReactNative.Style.size -> [> `paddingBottom ] t = "paddingBottom"
  [@@bs.set]

external js_paddingEnd :
  abs_style -> ReactNative.Style.size -> [> `paddingEnd ] t = "paddingEnd"
  [@@bs.set]

external js_paddingHorizontal :
  abs_style -> ReactNative.Style.size -> [> `paddingHorizontal ] t
  = "paddingHorizontal"
  [@@bs.set]

external js_paddingLeft :
  abs_style -> ReactNative.Style.size -> [> `paddingLeft ] t = "paddingLeft"
  [@@bs.set]

external js_paddingRight :
  abs_style -> ReactNative.Style.size -> [> `paddingRight ] t = "paddingRight"
  [@@bs.set]

external js_paddingStart :
  abs_style -> ReactNative.Style.size -> [> `paddingStart ] t = "paddingStart"
  [@@bs.set]

external js_paddingTop :
  abs_style -> ReactNative.Style.size -> [> `paddingTop ] t = "paddingTop"
  [@@bs.set]

external js_paddingVertical :
  abs_style -> ReactNative.Style.size -> [> `paddingVertical ] t
  = "paddingVertical"
  [@@bs.set]

external js_position :
  abs_style -> ReactNative.Style.position -> [> `position ] t = "position"
  [@@bs.set]

external js_right : abs_style -> ReactNative.Style.size -> [> `right ] t
  = "right"
  [@@bs.set]

external js_start : abs_style -> ReactNative.Style.size -> [> `start ] t
  = "start"
  [@@bs.set]

external js_top : abs_style -> ReactNative.Style.size -> [> `top ] t = "top"
  [@@bs.set]

external js_width : abs_style -> ReactNative.Style.size -> [> `width ] t
  = "width"
  [@@bs.set]

external js_zIndex : abs_style -> float -> [> `zIndex ] t = "zIndex" [@@bs.set]

external js_direction :
  abs_style ->
  ([ `inherit_ [@bs.as "inherit"] | `ltr | `rtl ][@bs.string]) ->
  [> `direction ] t = "direction"
  [@@bs.set]

external js_transform :
  abs_style -> ReactNative.Style.transform array -> [> `transform ] t
  = "transform"
  [@@bs.set]

external js_transformMatrix :
  abs_style -> float array -> [> `transformMatrix ] t = "transformMatrix"
  [@@bs.set]

external js_rotation : abs_style -> float -> [> `rotation ] t = "rotation"
  [@@bs.set]

external js_scaleX : abs_style -> float -> [> `scaleX ] t = "scaleX" [@@bs.set]

external js_scaleY : abs_style -> float -> [> `scaleY ] t = "scaleY" [@@bs.set]

external js_translateX : abs_style -> float -> [> `translateX ] t = "translateX"
  [@@bs.set]

external js_translateY : abs_style -> float -> [> `translateY ] t = "translateY"
  [@@bs.set]

external js_fontVariant :
  abs_style -> ReactNative.FontVariant.t array -> [> `fontVariant ] t
  = "fontVariant"
  [@@bs.set]

external js_letterSpacing : abs_style -> float -> [> `letterSpacing ] t
  = "letterSpacing"
  [@@bs.set]

external js_textDecorationColor :
  abs_style -> ReactNative.Color.t -> [> `textDecorationColor ] t
  = "textDecorationColor"
  [@@bs.set]

external js_textDecorationStyle :
  abs_style ->
  ReactNative.Style.textDecorationStyle ->
  [> `textDecorationStyle ] t = "textDecorationStyle"
  [@@bs.set]

external js_writingDirection :
  abs_style -> ReactNative.Style.writingDirection -> [> `writingDirection ] t
  = "writingDirection"
  [@@bs.set]

external js_textAlignVertical :
  abs_style -> ReactNative.Style.textAlignVertical -> [> `textAlignVertical ] t
  = "textAlignVertical"
  [@@bs.set]

external js_includeFontPadding : abs_style -> bool -> [> `includeFontPadding ] t
  = "includeFontPadding"
  [@@bs.set]

external js_color : abs_style -> ReactNative.Color.t -> [> `color ] t = "color"
  [@@bs.set]

external js_fontFamily : abs_style -> string -> [> `fontFamily ] t
  = "fontFamily"
  [@@bs.set]

external js_fontSize : abs_style -> float -> [> `fontSize ] t = "fontSize"
  [@@bs.set]

external js_fontStyle :
  abs_style -> ReactNative.Style.fontStyle -> [> `fontStyle ] t = "fontStyle"
  [@@bs.set]

external js_fontWeight :
  abs_style ->
  ([ `normal
   | `bold
   | `_100 [@bs.as "100"]
   | `_200 [@bs.as "200"]
   | `_300 [@bs.as "300"]
   | `_400 [@bs.as "400"]
   | `_500 [@bs.as "500"]
   | `_600 [@bs.as "600"]
   | `_700 [@bs.as "700"]
   | `_800 [@bs.as "800"]
   | `_900 [@bs.as "900"] ]
  [@bs.string]) ->
  [> `fontWeight ] t = "fontWeight"
  [@@bs.set]

external js_lineHeight : abs_style -> float -> [> `lineHeight ] t = "lineHeight"
  [@@bs.set]

external js_textAlign :
  abs_style -> ReactNative.Style.textAlign -> [> `textAlign ] t = "textAlign"
  [@@bs.set]

external js_textDecorationLine :
  abs_style ->
  ([ `none
   | `underline
   | `lineThrough [@bs.as "line-through"]
   | `underlineLineThrough [@bs.as "underline line-through"] ]
  [@bs.string]) ->
  [> `textDecorationLine ] t = "textDecorationLine"
  [@@bs.set]

external js_textShadowColor :
  abs_style -> ReactNative.Color.t -> [> `textShadowColor ] t
  = "textShadowColor"
  [@@bs.set]

external js_textShadowOffset :
  abs_style -> ReactNative.Style.offset -> [> `textShadowOffset ] t
  = "textShadowOffset"
  [@@bs.set]

external js_textShadowRadius : abs_style -> float -> [> `textShadowRadius ] t
  = "textShadowRadius"
  [@@bs.set]

external js_textTransform :
  abs_style -> ReactNative.Style.textTransform -> [> `textTransform ] t
  = "textTransform"
  [@@bs.set]

external js_testID : abs_style -> string -> [> `testID ] t = "testID" [@@bs.set]

external js_backfaceVisibility :
  abs_style ->
  ReactNative.Style.backfaceVisibility ->
  [> `backfaceVisibility ] t = "backfaceVisibility"
  [@@bs.set]

external js_backgroundColor :
  abs_style -> ReactNative.Color.t -> [> `backgroundColor ] t
  = "backgroundColor"
  [@@bs.set]

external js_borderBottomColor :
  abs_style -> ReactNative.Color.t -> [> `borderBottomColor ] t
  = "borderBottomColor"
  [@@bs.set]

external js_borderBottomEndRadius :
  abs_style -> float -> [> `borderBottomEndRadius ] t = "borderBottomEndRadius"
  [@@bs.set]

external js_borderBottomLeftRadius :
  abs_style -> float -> [> `borderBottomLeftRadius ] t
  = "borderBottomLeftRadius"
  [@@bs.set]

external js_borderBottomRightRadius :
  abs_style -> float -> [> `borderBottomRightRadius ] t
  = "borderBottomRightRadius"
  [@@bs.set]

external js_borderBottomStartRadius :
  abs_style -> float -> [> `borderBottomStartRadius ] t
  = "borderBottomStartRadius"
  [@@bs.set]

external js_borderColor :
  abs_style -> ReactNative.Color.t -> [> `borderColor ] t = "borderColor"
  [@@bs.set]

external js_borderEndColor :
  abs_style -> ReactNative.Color.t -> [> `borderEndColor ] t = "borderEndColor"
  [@@bs.set]

external js_borderLeftColor :
  abs_style -> ReactNative.Color.t -> [> `borderLeftColor ] t
  = "borderLeftColor"
  [@@bs.set]

external js_borderRadius : abs_style -> float -> [> `borderRadius ] t
  = "borderRadius"
  [@@bs.set]

external js_borderRightColor :
  abs_style -> ReactNative.Color.t -> [> `borderRightColor ] t
  = "borderRightColor"
  [@@bs.set]

external js_borderStartColor :
  abs_style -> ReactNative.Color.t -> [> `borderStartColor ] t
  = "borderStartColor"
  [@@bs.set]

external js_borderStyle :
  abs_style -> ReactNative.Style.borderStyle -> [> `borderStyle ] t
  = "borderStyle"
  [@@bs.set]

external js_borderTopColor :
  abs_style -> ReactNative.Color.t -> [> `borderTopColor ] t = "borderTopColor"
  [@@bs.set]

external js_borderTopEndRadius :
  abs_style -> float -> [> `borderTopEndRadius ] t = "borderTopEndRadius"
  [@@bs.set]

external js_borderTopLeftRadius :
  abs_style -> float -> [> `borderTopLeftRadius ] t = "borderTopLeftRadius"
  [@@bs.set]

external js_borderTopRightRadius :
  abs_style -> float -> [> `borderTopRightRadius ] t = "borderTopRightRadius"
  [@@bs.set]

external js_borderTopStartRadius :
  abs_style -> float -> [> `borderTopStartRadius ] t = "borderTopStartRadius"
  [@@bs.set]

external js_opacity : abs_style -> float -> [> `opacity ] t = "opacity"
  [@@bs.set]

external js_elevation : abs_style -> float -> [> `elevation ] t = "elevation"
  [@@bs.set]

external js_shadowColor :
  abs_style -> ReactNative.Color.t -> [> `shadowColor ] t = "shadowColor"
  [@@bs.set]

external js_shadowOffset :
  abs_style -> ReactNative.Style.offset -> [> `shadowOffset ] t = "shadowOffset"
  [@@bs.set]

external js_shadowOpacity : abs_style -> float -> [> `shadowOpacity ] t
  = "shadowOpacity"
  [@@bs.set]

external js_shadowRadius : abs_style -> float -> [> `shadowRadius ] t
  = "shadowRadius"
  [@@bs.set]

external js_resizeMode :
  abs_style -> ReactNative.Style.resizeMode -> [> `resizeMode ] t = "resizeMode"
  [@@bs.set]

external js_overlayColor :
  abs_style -> ReactNative.Color.t -> [> `overlayColor ] t = "overlayColor"
  [@@bs.set]

external js_tintColor : abs_style -> ReactNative.Color.t -> [> `tintColor ] t
  = "tintColor"
  [@@bs.set]

(* accessors *)
let alignContent = swap js_alignContent

let alignItems = swap js_alignItems

let alignSelf = swap js_alignSelf

let aspectRatio = swap js_aspectRatio

let borderBottomWidth = swap js_borderBottomWidth

let borderEndWidth = swap js_borderEndWidth

let borderLeftWidth = swap js_borderLeftWidth

let borderRightWidth = swap js_borderRightWidth

let borderStartWidth = swap js_borderStartWidth

let borderTopWidth = swap js_borderTopWidth

let borderWidth = swap js_borderWidth

let bottom = swap js_bottom

let display = swap js_display

let end_ = swap js_end_

let flex = swap js_flex

let flexBasis = swap js_flexBasis

let flexDirection = swap js_flexDirection

let flexGrow = swap js_flexGrow

let flexShrink = swap js_flexShrink

let flexWrap = swap js_flexWrap

let height = swap js_height

let justifyContent = swap js_justifyContent

let left = swap js_left

let margin = swap js_margin

let marginBottom = swap js_marginBottom

let marginEnd = swap js_marginEnd

let marginHorizontal = swap js_marginHorizontal

let marginLeft = swap js_marginLeft

let marginRight = swap js_marginRight

let marginStart = swap js_marginStart

let marginTop = swap js_marginTop

let marginVertical = swap js_marginVertical

let maxHeight = swap js_maxHeight

let maxWidth = swap js_maxWidth

let minHeight = swap js_minHeight

let minWidth = swap js_minWidth

let overflow = swap js_overflow

let padding = swap js_padding

let paddingBottom = swap js_paddingBottom

let paddingEnd = swap js_paddingEnd

let paddingHorizontal = swap js_paddingHorizontal

let paddingLeft = swap js_paddingLeft

let paddingRight = swap js_paddingRight

let paddingStart = swap js_paddingStart

let paddingTop = swap js_paddingTop

let paddingVertical = swap js_paddingVertical

let position = swap js_position

let right = swap js_right

let start = swap js_start

let top = swap js_top

let width = swap js_width

let zIndex = swap js_zIndex

let direction = swap js_direction

let transform = swap js_transform

let transformMatrix = swap js_transformMatrix

let rotation = swap js_rotation

let scaleX = swap js_scaleX

let scaleY = swap js_scaleY

let translateX = swap js_translateX

let translateY = swap js_translateY

let fontVariant = swap js_fontVariant

let letterSpacing = swap js_letterSpacing

let textDecorationColor = swap js_textDecorationColor

let textDecorationStyle = swap js_textDecorationStyle

let writingDirection = swap js_writingDirection

let textAlignVertical = swap js_textAlignVertical

let includeFontPadding = swap js_includeFontPadding

let color = swap js_color

let fontFamily = swap js_fontFamily

let fontSize = swap js_fontSize

let fontStyle = swap js_fontStyle

let fontWeight = swap js_fontWeight

let lineHeight = swap js_lineHeight

let textAlign = swap js_textAlign

let textDecorationLine = swap js_textDecorationLine

let textShadowColor = swap js_textShadowColor

let textShadowOffset = swap js_textShadowOffset

let textShadowRadius = swap js_textShadowRadius

let textTransform = swap js_textTransform

let testID = swap js_testID

let backfaceVisibility = swap js_backfaceVisibility

let backgroundColor = swap js_backgroundColor

let borderBottomColor = swap js_borderBottomColor

let borderBottomEndRadius = swap js_borderBottomEndRadius

let borderBottomLeftRadius = swap js_borderBottomLeftRadius

let borderBottomRightRadius = swap js_borderBottomRightRadius

let borderBottomStartRadius = swap js_borderBottomStartRadius

let borderColor = swap js_borderColor

let borderEndColor = swap js_borderEndColor

let borderLeftColor = swap js_borderLeftColor

let borderRadius = swap js_borderRadius

let borderRightColor = swap js_borderRightColor

let borderStartColor = swap js_borderStartColor

let borderStyle = swap js_borderStyle

let borderTopColor = swap js_borderTopColor

let borderTopEndRadius = swap js_borderTopEndRadius

let borderTopLeftRadius = swap js_borderTopLeftRadius

let borderTopRightRadius = swap js_borderTopRightRadius

let borderTopStartRadius = swap js_borderTopStartRadius

let opacity = swap js_opacity

let elevation = swap js_elevation

let shadowColor = swap js_shadowColor

let shadowOffset = swap js_shadowOffset

let shadowOpacity = swap js_shadowOpacity

let shadowRadius = swap js_shadowRadius

let resizeMode = swap js_resizeMode

let overlayColor = swap js_overlayColor

let tintColor = swap js_tintColor
